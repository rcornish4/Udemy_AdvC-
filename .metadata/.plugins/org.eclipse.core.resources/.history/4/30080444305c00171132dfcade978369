/*
 * Complex.cpp
 *
 *  Created on: Jun 28, 2017
 *      Author: rcornish
 */
#include <iostream>
#include "Complex.h"

//using namespace caveofprogramming;

/*caveofprogramming::Complex::Complex() : real(0.0), imaginary(0.0) { }

caveofprogramming::Complex::Complex(double real, double imaginary) : real(real), imaginary(imaginary) { }

caveofprogramming::Complex::Complex( const Complex &other ) {
	*this = other;
}

const caveofprogramming::Complex& caveofprogramming::Complex::operator=( const Complex &other ) {
	return *this;*/

namespace caveofprogramming {

Complex::Complex() : real(0), imaginary(0) { }

Complex::Complex(double real, double imaginary) : real(real), imaginary(imaginary) { }

Complex::Complex(const Complex &other) {
	*this = other;
}

const Complex &Complex::operator=(const Complex &other) {
	real = other.real;
	imaginary = other.imaginary;

	return *this;
}

std::ostream &operator<<(std::ostream &out, const Complex &other) {
	out << "Real: " << other.getReal() << ", Imaginary: " << other.getImaginary() << std::flush;
	return out;
}

}  // namespace caveofprogramming

