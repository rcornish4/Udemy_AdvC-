/*
 * Complex.h
 *
 *  Created on: Jun 28, 2017
 *      Author: rcornish
 */

#ifndef COMPLEX_H_
#define COMPLEX_H_

namespace caveofprogramming {

class Complex {
private:
	double real;
	double imaginary;

public:
	Complex();
	Complex(double real, double imaginary);
	// Copy Constructor
	Complex( const Complex &other );

	double getReal() const {
		return real;
	}

	double getImaginary() const {
		return imaginary;
	}

	const Complex &operator= (const Complex &other);
	~Complex() { }
};

std::ostream &operator<<( std::ostream &out, const caveofprogramming::Complex &test ) {
	out << "Real: " << test.getReal() << ", Imaginary: " << test.getImaginary() << std::flush;
	return out;
}


}



#endif /* COMPLEX_H_ */
