/*
 * Sorting Vectors.cpp
 *
 *  Created on: Jun 28, 2017
 *      Author: rcornish
 */

#include <iostream>
#include <vector>
#include <algorithm>

class Test {
	int id;
	std::string name;

public:
	Test( int id, std::string name) : id(id), name(name) { }

	void print() const {
		std::cout << id << ": " << name << std::endl;
	}

	friend bool comp( const Test &a, const Test &b);

	/*bool operator<  (const Test& other ) const {
    return name < other.name;
  }*/

};

bool comp( const Test &a, const Test &b ) {
	return a.name < b.name;
}

int main( int argc, char** argv ) {
	std::vector<Test> tests;

	bool (*cf)(const Test&, const Test&) = comp;

	tests.push_back(Test(5, "Mike"));
	tests.push_back(Test(10, "Sue"));
	tests.push_back(Test(7, "Raj"));
	tests.push_back(Test(3, "Vicky"));

	std::sort(tests.begin(), tests.begin()+2, *cf);
	for (decltype(tests)::iterator it = tests.begin(); it != tests.end(); ++it) {
		it->print();
	}
	for (std::vector<Test>::iterator it = tests.begin(); it != tests.end(); ++it) {
		it->print();
	}
	return 0;
}



